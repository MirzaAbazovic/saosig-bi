<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:TalendMetadata="http://www.talend.org/metadata/connection/2010" xmlns:orgomg.cwm.resource.relational="http:///orgomg/cwm/resource/relational.ecore">
  <TalendMetadata:DatabaseConnection xmi:id="_U83ikKRpEeOVUagbah81_w" name="saosigProdukcija" id="_O0iSYKRpEeOVUagbah81_w" label="saosigProdukcija" dataPackage="_VCOjsKRpEeOVUagbah81_w" DatabaseType="Microsoft SQL Server" DriverClass="net.sourceforge.jtds.jdbc.Driver" URL="jdbc:jtds:sqlserver://192.168.0.43:1433/SaosigProd;noDatetimeStringSync=true" Port="1433" Username="pep" Password="9C0RJrnQbhE=" ServerName="192.168.0.43" SID="SaosigProd" SqlSynthax="SQL Syntax" DbmsId="id_MSSQL" ProductId="SQL_SERVER" AdditionalParams="noDatetimeStringSync=true" SystemSQL="true" UiSchema="">
    <taggedValue xmi:id="_U9AsgKRpEeOVUagbah81_w" tag="Is Conn Need Reload" value="false"/>
    <taggedValue xmi:id="_U-M_UKRpEeOVUagbah81_w" tag="package filter" value=""/>
    <taggedValue xmi:id="_VAbz8KRpEeOVUagbah81_w" tag="Status" value=""/>
    <taggedValue xmi:id="_VAbz8aRpEeOVUagbah81_w" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_VAbz8qRpEeOVUagbah81_w" tag="Purpose" value=""/>
    <taggedValue xmi:id="_VAbz86RpEeOVUagbah81_w" tag="Description" value=""/>
    <taggedValue xmi:id="_VAbz9KRpEeOVUagbah81_w" tag="Author" value=""/>
    <taggedValue xmi:id="_VAbz9aRpEeOVUagbah81_w" tag="otherParameter"/>
    <taggedValue xmi:id="_VAlk8KRpEeOVUagbah81_w" tag="DB ProductName" value="Microsoft SQL Server"/>
    <taggedValue xmi:id="_VAlk8aRpEeOVUagbah81_w" tag="DB ProductVersion" value="10.50.2500"/>
    <taggedValue xmi:id="_VAlk8qRpEeOVUagbah81_w" tag="DB IdentifierQuoteString" value="&quot;"/>
    <queries xmi:id="_ANyGEPFlEeOLbfFCRLl3Fw">
      <query xmi:id="_ANytIPFlEeOLbfFCRLl3Fw" id="_KiuEIPFmEeOLbfFCRLl3Fw" label="isplacene_stete_2014_jan" value="DECLARE @danTo DATETIME, @danFrom DATETIME, @claimReservationIdPrevious INT&#xD;&#xA;SET @danFrom = '2014.01.01'&#xD;&#xA;SET @danTo = '2014.02.01' &#xD;&#xA;SET @claimReservationIdPrevious = (&#xD;&#xA; SELECT MAX(CLAIM_RESERVATION_ID) FROM [ins].[I_CLAIM_RESERVATION] CR &#xD;&#xA;                        WHERE CR.Status_Id!=3&#xD;&#xA;                        AND CR.Reservation_Date&lt;@danTo                        &#xD;&#xA;                        ) &#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;SELECT  LDH.LIQUIDATION_DETAIL_ID AS Id&#xD;&#xA;                        ,CMT.CMTID as CmtId&#xD;&#xA;                        ,Claim.CLAIM_TYPE_ID AS ClaimTypeId&#xD;&#xA;                        ,Claim.CONTRACT_TARIFF_GROUP AS Tarifa&#xD;&#xA;                        ,Claim.CLAIM_NO AS ClaimNo&#xD;&#xA;                        ,Claim.CLAIM_REQUEST_NO_OLD AS ClaimNoOld&#xD;&#xA;                        ,Claim.COST_ORGUNIT_SUBJECTID as OrgUnitSubjectId&#xD;&#xA;                        ,COMP.Name as OrgUnit&#xD;&#xA;                        ,Claim.EVENT_DATE as EventDate&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION_ON_YEARLY_BASIS &#xD;&#xA;                            WHEN 1 THEN CREATION_DATE&#xD;&#xA;                            ELSE (SELECT MIN(DT_CRE) FROM INS.I_CLAIM_HIST CH  WITH (NOLOCK) WHERE CH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID AND Claim.CLAIM_VERSION_ON_YEARLY_BASIS = CH.CLAIM_VERSION_ON_YEARLY_BASIS)&#xD;&#xA;                        END AS ClaimDate&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID, Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 1, @danTo) AS ExpectedAmountMaterial&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID, Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 0, @danTo) AS ExpectedAmountNonMaterial&#xD;&#xA;                        ,CMT.TRANS_DATE AS PayoffDate&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 1 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountMaterial&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 0 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountNonMaterial&#xD;&#xA;                        ,Claim.PRE_WAR AS PreWar&#xD;&#xA;                        ,CASE Claim.PROSECUTION &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                        &#xD;&#xA;                        END AS Prosecution&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION&#xD;&#xA;                            WHEN 1 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS Reactivated,&#xD;&#xA;                        CASE ReservedAmountTotal&#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS IsReserved,&#xD;&#xA;                        Claim.GREEN_CARD AS GreenCard&#xD;&#xA;                        ,CASE Claim.PROSECUTION_AND_JUDICAL &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                            &#xD;&#xA;                        END AS ProsecutionJudical&#xD;&#xA;                        ,CASE&#xD;&#xA;                            WHEN LH.AUTHORITY_ID IS NULL THEN (SELECT CLIENT_ID FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.CLIENT_ID) &#xD;&#xA;                            ELSE (SELECT CLIENT_ID FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.AUTHORITY_ID) &#xD;&#xA;                        END AS ApplicantClientId&#xD;&#xA;                        ,Claim.CONTRACT_NO AS ContractNo&#xD;&#xA;                        ,Claim.INSURED_NAME AS InsuredName&#xD;&#xA;                        ,Claim.INSURED as InsuredClientId&#xD;&#xA;                        ,Claim.AO_PLUS as AOPlus&#xD;&#xA;                        ,Claim.AKD as AKD&#xD;&#xA;                        ,Claim.AN as AN&#xD;&#xA;                        ,Claim.PARENT_ORGUNIT_SUBJECTID AS ParentOrgUnitSubjectId&#xD;&#xA;                        ,Claim.HOLDER AS HolderClientId&#xD;&#xA;                    FROM (&#xD;&#xA;                        SELECT *, ISNULL(INS.GetReservedAmountTotalByClaimReservation(CLAIM_ID, CLAIM_VERSION_ON_YEARLY_BASIS, @claimReservationIdPrevious), 0) as ReservedAmountTotal  FROM INS.GetClaimHistDenormalizedExtended(@danTo) &#xD;&#xA;                        WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    SERVICE_CLAIM = 0 /*ŠTETE KOJE NISU USLUŽNE*/ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    AND ISNULL(FOR_OFFICIAL_REPORTS_ONLY, 0) = 0&#xD;&#xA;                        ) Claim&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_HIST LH  WITH (NOLOCK) ON LH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_DETAIL_HIST LDH  WITH (NOLOCK) ON LH.LIQUIDATION_HIST_ID = LDH.LIQUIDATION_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_CONTRACT_MONEY_TRANSFER CMT WITH (NOLOCK) ON CMT.REF_ID = LDH.LIQUIDATION_DETAIL_ID &#xD;&#xA;                    LEFT JOIN T_Company COMP  WITH (NOLOCK) ON (COMP.COMPANYID + 1) = Claim.COST_ORGUNIT_SUBJECTID&#xD;&#xA;                    WHERE Claim.CLAIM_VERSION_ON_YEARLY_BASIS = LH.CLAIM_VERSION_ON_YEARLY_BASIS&#xD;&#xA;                    AND CMT.TRANSFER_TYPE = 4 /*TIP: ISPLATA PO ŠTETI*/&#xD;&#xA;                    AND CMT.TRANS_DATE >= @danFrom AND CMT.TRANS_DATE &lt;= @danTo"/>
      <query xmi:id="_xJjcMPIEEeOmIMazbWygiA" id="_xJkDQPIEEeOmIMazbWygiA" label="isplacene_stete_2013" value="DECLARE @danTo DATETIME, @danFrom DATETIME, @claimReservationIdPrevious INT&#xD;&#xA;SET @danFrom = '2013.01.01'&#xD;&#xA;SET @danTo = '2014.01.01' &#xD;&#xA;SET @claimReservationIdPrevious = (&#xD;&#xA; SELECT MAX(CLAIM_RESERVATION_ID) FROM [ins].[I_CLAIM_RESERVATION] CR &#xD;&#xA;                        WHERE CR.Status_Id!=3&#xD;&#xA;                        AND CR.Reservation_Date&lt;@danTo                        &#xD;&#xA;                        ) &#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;SELECT  LDH.LIQUIDATION_DETAIL_ID AS Id&#xD;&#xA;                        ,CMT.CMTID as CmtId&#xD;&#xA;                        ,Claim.CLAIM_TYPE_ID AS ClaimTypeId&#xD;&#xA;                        ,Claim.CONTRACT_TARIFF_GROUP AS Tarifa&#xD;&#xA;                        ,Claim.CLAIM_NO AS ClaimNo&#xD;&#xA;                        ,Claim.CLAIM_REQUEST_NO_OLD AS ClaimNoOld&#xD;&#xA;                        ,Claim.COST_ORGUNIT_SUBJECTID as OrgUnitSubjectId&#xD;&#xA;                        ,COMP.Name as OrgUnit&#xD;&#xA;                        ,Claim.EVENT_DATE as EventDate&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION_ON_YEARLY_BASIS &#xD;&#xA;                            WHEN 1 THEN CREATION_DATE&#xD;&#xA;                            ELSE (SELECT MIN(DT_CRE) FROM INS.I_CLAIM_HIST CH  WITH (NOLOCK) WHERE CH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID AND Claim.CLAIM_VERSION_ON_YEARLY_BASIS = CH.CLAIM_VERSION_ON_YEARLY_BASIS)&#xD;&#xA;                        END AS ClaimDate&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID, Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 1, @danTo) AS ExpectedAmountMaterial&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID, Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 0, @danTo) AS ExpectedAmountNonMaterial&#xD;&#xA;                        ,CMT.TRANS_DATE AS PayoffDate&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 1 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountMaterial&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 0 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountNonMaterial&#xD;&#xA;                        ,Claim.PRE_WAR AS PreWar&#xD;&#xA;                        ,CASE Claim.PROSECUTION &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                        &#xD;&#xA;                        END AS Prosecution&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION&#xD;&#xA;                            WHEN 1 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS Reactivated,&#xD;&#xA;                        CASE ReservedAmountTotal&#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS IsReserved,&#xD;&#xA;                        Claim.GREEN_CARD AS GreenCard&#xD;&#xA;                        ,CASE Claim.PROSECUTION_AND_JUDICAL &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                            &#xD;&#xA;                        END AS ProsecutionJudical&#xD;&#xA;                        ,CASE&#xD;&#xA;                            WHEN LH.AUTHORITY_ID IS NULL THEN (SELECT CLIENT_ID FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.CLIENT_ID) &#xD;&#xA;                            ELSE (SELECT CLIENT_ID FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.AUTHORITY_ID) &#xD;&#xA;                        END AS ApplicantClientId&#xD;&#xA;                        ,Claim.CONTRACT_NO AS ContractNo&#xD;&#xA;                        ,Claim.INSURED_NAME AS InsuredName&#xD;&#xA;                        ,Claim.INSURED as InsuredClientId&#xD;&#xA;                        ,Claim.AO_PLUS as AOPlus&#xD;&#xA;                        ,Claim.AKD as AKD&#xD;&#xA;                        ,Claim.AN as AN&#xD;&#xA;                        ,Claim.PARENT_ORGUNIT_SUBJECTID AS ParentOrgUnitSubjectId&#xD;&#xA;                        ,Claim.HOLDER AS HolderClientId&#xD;&#xA;                    FROM (&#xD;&#xA;                        SELECT *, ISNULL(INS.GetReservedAmountTotalByClaimReservation(CLAIM_ID, CLAIM_VERSION_ON_YEARLY_BASIS, @claimReservationIdPrevious), 0) as ReservedAmountTotal  FROM INS.GetClaimHistDenormalizedExtended(@danTo) &#xD;&#xA;                        WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    SERVICE_CLAIM = 0 /*ŠTETE KOJE NISU USLUŽNE*/ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    AND ISNULL(FOR_OFFICIAL_REPORTS_ONLY, 0) = 0&#xD;&#xA;                        ) Claim&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_HIST LH  WITH (NOLOCK) ON LH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_DETAIL_HIST LDH  WITH (NOLOCK) ON LH.LIQUIDATION_HIST_ID = LDH.LIQUIDATION_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_CONTRACT_MONEY_TRANSFER CMT WITH (NOLOCK) ON CMT.REF_ID = LDH.LIQUIDATION_DETAIL_ID &#xD;&#xA;                    LEFT JOIN T_Company COMP  WITH (NOLOCK) ON (COMP.COMPANYID + 1) = Claim.COST_ORGUNIT_SUBJECTID&#xD;&#xA;                    WHERE Claim.CLAIM_VERSION_ON_YEARLY_BASIS = LH.CLAIM_VERSION_ON_YEARLY_BASIS&#xD;&#xA;                    AND CMT.TRANSFER_TYPE = 4 /*TIP: ISPLATA PO ŠTETI*/&#xD;&#xA;                    AND CMT.TRANS_DATE >= @danFrom AND CMT.TRANS_DATE &lt;= @danTo"/>
      <query xmi:id="_6vIZ4PIFEeOmIMazbWygiA" properties="deleted&#xA;&#xA;true&#xA;&#xA;" id="_6vIZ4fIFEeOmIMazbWygiA" label="isplacene_stete_2014" value="DECLARE @danTo DATETIME, @danFrom DATETIME, @claimReservationIdPrevious INT&#xD;&#xA;SET @danFrom = '2013.01.01'&#xD;&#xA;SET @danTo = GETDATE()+1&#xD;&#xA;SET @claimReservationIdPrevious = (&#xD;&#xA; SELECT MAX(CLAIM_RESERVATION_ID) FROM [ins].[I_CLAIM_RESERVATION] CR &#xD;&#xA;                        WHERE CR.Status_Id!=3&#xD;&#xA;                        AND CR.Reservation_Date&lt;@danTo                        &#xD;&#xA;                        ) &#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;SELECT  LDH.LIQUIDATION_DETAIL_ID AS Id&#xD;&#xA;                        ,CMT.CMTID as CmtId&#xD;&#xA;                        ,Claim.CLAIM_TYPE_ID AS ClaimTypeId&#xD;&#xA;                        ,Claim.CONTRACT_TARIFF_GROUP AS Tarifa&#xD;&#xA;                        ,Claim.CLAIM_NO AS ClaimNo&#xD;&#xA;                        ,Claim.CLAIM_REQUEST_NO_OLD AS ClaimNoOld&#xD;&#xA;                        ,Claim.COST_ORGUNIT_SUBJECTID as OrgUnitSubjectId&#xD;&#xA;                        ,COMP.Name as OrgUnit&#xD;&#xA;                        ,Claim.EVENT_DATE as EventDate&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION_ON_YEARLY_BASIS &#xD;&#xA;                            WHEN 1 THEN CREATION_DATE&#xD;&#xA;                            ELSE (SELECT MIN(DT_CRE) &#xA; FROM INS.I_CLAIM_HIST CH  WITH (NOLOCK) WHERE CH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID AND &#xA; Claim.CLAIM_VERSION_ON_YEARLY_BASIS = CH.CLAIM_VERSION_ON_YEARLY_BASIS)&#xD;&#xA;                        END AS ClaimDate&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID,&#xA;  Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 1, @danTo) AS ExpectedAmountMaterial&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID,&#xA;  Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 0, @danTo) AS ExpectedAmountNonMaterial&#xD;&#xA;                        ,CMT.TRANS_DATE AS PayoffDate&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 1 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountMaterial&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 0 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountNonMaterial&#xD;&#xA;                        ,Claim.PRE_WAR AS PreWar&#xD;&#xA;                        ,CASE Claim.PROSECUTION &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                        &#xD;&#xA;                        END AS Prosecution&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION&#xD;&#xA;                            WHEN 1 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS Reactivated,&#xD;&#xA;                        CASE ReservedAmountTotal&#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS IsReserved,&#xD;&#xA;                        Claim.GREEN_CARD AS GreenCard&#xD;&#xA;                        ,CASE Claim.PROSECUTION_AND_JUDICAL &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                            &#xD;&#xA;                        END AS ProsecutionJudical&#xD;&#xA;                        ,CASE&#xD;&#xA;                            WHEN LH.AUTHORITY_ID IS NULL THEN (SELECT CLIENT_ID &#xA; FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.CLIENT_ID) &#xD;&#xA;                            ELSE (SELECT CLIENT_ID &#xA; FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.AUTHORITY_ID) &#xD;&#xA;                        END AS ApplicantClientId&#xD;&#xA;                        ,Claim.CONTRACT_NO AS ContractNo&#xD;&#xA;                        ,Claim.INSURED_NAME AS InsuredName&#xD;&#xA;                        ,Claim.INSURED as InsuredClientId&#xD;&#xA;                        ,Claim.AO_PLUS as AOPlus&#xD;&#xA;                        ,Claim.AKD as AKD&#xD;&#xA;                        ,Claim.AN as AN&#xD;&#xA;                        ,Claim.PARENT_ORGUNIT_SUBJECTID AS ParentOrgUnitSubjectId&#xD;&#xA;                        ,Claim.HOLDER AS HolderClientId&#xD;&#xA;                    FROM (&#xD;&#xA;                        SELECT *, ISNULL(INS.GetReservedAmountTotalByClaimReservation(CLAIM_ID, CLAIM_VERSION_ON_YEARLY_BASIS, @claimReservationIdPrevious),&#xA;  0) as ReservedAmountTotal  FROM INS.GetClaimHistDenormalizedExtended(@danTo) &#xD;&#xA;                        WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    SERVICE_CLAIM = 0 /*ŠTETE KOJE NISU USLUŽNE*/ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    AND ISNULL(FOR_OFFICIAL_REPORTS_ONLY, 0) = 0&#xD;&#xA;                        ) Claim&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_HIST LH  WITH (NOLOCK) ON LH.CLAIM_HIST_ID = &#xA; Claim.CLAIM_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_DETAIL_HIST LDH  WITH (NOLOCK) ON &#xA; LH.LIQUIDATION_HIST_ID = LDH.LIQUIDATION_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_CONTRACT_MONEY_TRANSFER CMT WITH (NOLOCK) ON CMT.REF_ID = &#xA; LDH.LIQUIDATION_DETAIL_ID &#xD;&#xA;                    LEFT JOIN T_Company COMP  WITH (NOLOCK) ON (COMP.COMPANYID + 1) = &#xA; Claim.COST_ORGUNIT_SUBJECTID&#xD;&#xA;                    WHERE Claim.CLAIM_VERSION_ON_YEARLY_BASIS = LH.CLAIM_VERSION_ON_YEARLY_BASIS&#xD;&#xA;                    AND CMT.TRANSFER_TYPE = 4 /*TIP: ISPLATA PO ŠTETI*/&#xD;&#xA;                    AND CMT.TRANS_DATE >= @danFrom AND CMT.TRANS_DATE &lt;= @danTo"/>
      <query xmi:id="_thK44PIHEeO8RdVtjMBPKw" id="_thK44fIHEeO8RdVtjMBPKw" label="isplacene_stete_2014_today" value="DECLARE @danTo DATETIME, @danFrom DATETIME, @claimReservationIdPrevious INT&#xD;&#xA;SET @danFrom = '2014.01.01'&#xD;&#xA;SET @danTo = GETDATE()+1&#xD;&#xA;SET @claimReservationIdPrevious = (&#xD;&#xA; SELECT MAX(CLAIM_RESERVATION_ID) FROM [ins].[I_CLAIM_RESERVATION] CR &#xD;&#xA;                        WHERE CR.Status_Id!=3&#xD;&#xA;                        AND CR.Reservation_Date&lt;@danTo                        &#xD;&#xA;                        ) &#x9;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;SELECT  LDH.LIQUIDATION_DETAIL_ID AS Id&#xD;&#xA;                        ,CMT.CMTID as CmtId&#xD;&#xA;                        ,Claim.CLAIM_TYPE_ID AS ClaimTypeId&#xD;&#xA;                        ,Claim.CONTRACT_TARIFF_GROUP AS Tarifa&#xD;&#xA;                        ,Claim.CLAIM_NO AS ClaimNo&#xD;&#xA;                        ,Claim.CLAIM_REQUEST_NO_OLD AS ClaimNoOld&#xD;&#xA;                        ,Claim.COST_ORGUNIT_SUBJECTID as OrgUnitSubjectId&#xD;&#xA;                        ,COMP.Name as OrgUnit&#xD;&#xA;                        ,Claim.EVENT_DATE as EventDate&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION_ON_YEARLY_BASIS &#xD;&#xA;                            WHEN 1 THEN CREATION_DATE&#xD;&#xA;                            ELSE (SELECT MIN(DT_CRE) &#xA; FROM INS.I_CLAIM_HIST CH  WITH (NOLOCK) WHERE CH.CLAIM_HIST_ID = Claim.CLAIM_HIST_ID AND &#xA; Claim.CLAIM_VERSION_ON_YEARLY_BASIS = CH.CLAIM_VERSION_ON_YEARLY_BASIS)&#xD;&#xA;                        END AS ClaimDate&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID,&#xA;  Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 1, @danTo) AS ExpectedAmountMaterial&#xD;&#xA;                        ,ins.[GetReservedAmount](Claim.CLAIM_ID,&#xA;  Claim.CLAIM_VERSION_ON_YEARLY_BASIS, 0, @danTo) AS ExpectedAmountNonMaterial&#xD;&#xA;                        ,CMT.TRANS_DATE AS PayoffDate&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 1 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountMaterial&#xD;&#xA;                        ,CASE LDH.IS_MATERIAL &#xD;&#xA;                            WHEN 0 THEN CMT.AMOUNT &#xD;&#xA;                            ELSE 0&#xD;&#xA;                        END AS PayoffAmountNonMaterial&#xD;&#xA;                        ,Claim.PRE_WAR AS PreWar&#xD;&#xA;                        ,CASE Claim.PROSECUTION &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                        &#xD;&#xA;                        END AS Prosecution&#xD;&#xA;                        ,CASE Claim.CLAIM_VERSION&#xD;&#xA;                            WHEN 1 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS Reactivated,&#xD;&#xA;                        CASE ReservedAmountTotal&#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'&#xD;&#xA;                        END AS IsReserved,&#xD;&#xA;                        Claim.GREEN_CARD AS GreenCard&#xD;&#xA;                        ,CASE Claim.PROSECUTION_AND_JUDICAL &#xD;&#xA;                            WHEN 0 THEN 'Ne'&#xD;&#xA;                            ELSE 'Da'                            &#xD;&#xA;                        END AS ProsecutionJudical&#xD;&#xA;                        ,CASE&#xD;&#xA;                            WHEN LH.AUTHORITY_ID IS NULL THEN (SELECT CLIENT_ID &#xA; FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.CLIENT_ID) &#xD;&#xA;                            ELSE (SELECT CLIENT_ID &#xA; FROM INS.I_CLIENTS_HIST WHERE INS.I_CLIENTS_HIST.CLIENT_HIST_ID = LH.AUTHORITY_ID) &#xD;&#xA;                        END AS ApplicantClientId&#xD;&#xA;                        ,Claim.CONTRACT_NO AS ContractNo&#xD;&#xA;                        ,Claim.INSURED_NAME AS InsuredName&#xD;&#xA;                        ,Claim.INSURED as InsuredClientId&#xD;&#xA;                        ,Claim.AO_PLUS as AOPlus&#xD;&#xA;                        ,Claim.AKD as AKD&#xD;&#xA;                        ,Claim.AN as AN&#xD;&#xA;                        ,Claim.PARENT_ORGUNIT_SUBJECTID AS ParentOrgUnitSubjectId&#xD;&#xA;                        ,Claim.HOLDER AS HolderClientId&#xD;&#xA;                    FROM (&#xD;&#xA;                        SELECT *, ISNULL(INS.GetReservedAmountTotalByClaimReservation(CLAIM_ID,&#xA;  CLAIM_VERSION_ON_YEARLY_BASIS, @claimReservationIdPrevious),&#xA;  0) as ReservedAmountTotal  FROM INS.GetClaimHistDenormalizedExtended(@danTo) &#xD;&#xA;                        WHERE &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    SERVICE_CLAIM = 0 /*ŠTETE KOJE NISU USLUŽNE*/ &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    AND ISNULL(FOR_OFFICIAL_REPORTS_ONLY, 0) = 0&#xD;&#xA;                        ) Claim&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_HIST LH  WITH (NOLOCK) ON LH.CLAIM_HIST_ID = &#xA; Claim.CLAIM_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_LIQUIDATION_DETAIL_HIST LDH  WITH (NOLOCK) ON &#xA; LH.LIQUIDATION_HIST_ID = LDH.LIQUIDATION_HIST_ID&#xD;&#xA;                    INNER JOIN INS.I_CONTRACT_MONEY_TRANSFER CMT WITH (NOLOCK) ON CMT.REF_ID = &#xA; LDH.LIQUIDATION_DETAIL_ID &#xD;&#xA;                    LEFT JOIN T_Company COMP  WITH (NOLOCK) ON (COMP.COMPANYID + 1) = &#xA; Claim.COST_ORGUNIT_SUBJECTID&#xD;&#xA;                    WHERE Claim.CLAIM_VERSION_ON_YEARLY_BASIS = LH.CLAIM_VERSION_ON_YEARLY_BASIS&#xD;&#xA;                    AND CMT.TRANSFER_TYPE = 4 /*TIP: ISPLATA PO ŠTETI*/&#xD;&#xA;                    AND CMT.TRANS_DATE >= @danFrom AND CMT.TRANS_DATE &lt;= @danTo"/>
    </queries>
  </TalendMetadata:DatabaseConnection>
  <orgomg.cwm.resource.relational:Catalog xmi:id="_VCOjsKRpEeOVUagbah81_w" name="SaosigProd" dataManager="_U83ikKRpEeOVUagbah81_w">
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjsaRpEeOVUagbah81_w" name="book"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjsqRpEeOVUagbah81_w" name="COR"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjs6RpEeOVUagbah81_w" name="db_accessadmin"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjtKRpEeOVUagbah81_w" name="db_backupoperator"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjtaRpEeOVUagbah81_w" name="db_datareader"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjtqRpEeOVUagbah81_w" name="db_datawriter"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjt6RpEeOVUagbah81_w" name="db_ddladmin"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjuKRpEeOVUagbah81_w" name="db_denydatareader"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjuaRpEeOVUagbah81_w" name="db_denydatawriter"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjuqRpEeOVUagbah81_w" name="db_owner"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOju6RpEeOVUagbah81_w" name="db_securityadmin"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjvKRpEeOVUagbah81_w" name="dbo"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjvaRpEeOVUagbah81_w" name="guest"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjvqRpEeOVUagbah81_w" name="INFORMATION_SCHEMA"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjv6RpEeOVUagbah81_w" name="ins"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjwKRpEeOVUagbah81_w" name="REP"/>
    <ownedElement xsi:type="orgomg.cwm.resource.relational:Schema" xmi:id="_VCOjwaRpEeOVUagbah81_w" name="sys"/>
  </orgomg.cwm.resource.relational:Catalog>
</xmi:XMI>
